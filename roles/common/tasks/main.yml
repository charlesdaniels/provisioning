---
- name: Install sources.list
  template:
      src: sources.list
      dest: /etc/apt/sources.list
      mode: 0644
  become_user: root
  become_method: sudo
  become: yes

- name: Update and upgrade apt packages
  apt:
    upgrade: yes
    update_cache: yes
  become_user: root
  become_method: sudo
  become: yes

- name: Add PowerShell Apt Key
  apt_key:
      url: "https://packages.microsoft.com/keys/microsoft.asc"
      state: "present"
  become: yes
  become_user: root
  become_method: sudo

- name: Add PowerShell Repository
  apt_repository:
      repo: "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main"
      state: present
      update_cache: true
  become: yes
  become_user: root
  become_method: sudo

- name: CLI tools
  apt: pkg={{ item }} state=latest
  with_items:
      - vim
      - zsh
      - python
      - python-pip
      - python3
      - python3-pip
      - htop
      - tmux
      - slurm
      - nload
      - nmap
      - netcat
      - iotop
      - bash
      - build-essential
      - git
      - tree
      - imagemagick
      - youtube-dl
      - lm-sensors
      - texlive
      - python3-sphinx
      - curl
      - pkg-config
      - cmake
      - surfraw
      - links2
      - bison
      - flex
      - sshfs
      - powershell

  become: yes
  become_user: root
  become_method: sudo

- name: System Services and Drivers
  apt: pkg={{ item }} state=latest
  with_items:
      - snapd
      - bluez
  become: yes
  become_user: root
  become_method: sudo

- name: Enable snapd
  service: name=snapd state=started enabled=yes
  become: yes
  become_user: root
  become_method: sudo

- name: Libraries
  apt: pkg={{ item }} state=latest
  with_items:
      - python3-yaml
      - python-psutil
      - python3-psutil
      - python3-numpy
      - python3-scipy
      - python3-matplotlib
      - python3-recommonmark
      - python3-tabulate
      - python3-humanize
      - python3-taglib
      - libgit2-dev
      - libssh2-1-dev
      - libssl-dev
      - openssl

  become: yes
  become_user: root
  become_method: sudo


- name: Install Rust
  shell: 'if [ ! -x "$(which cargo)" ] ; then curl https://sh.rustup.rs -sSf | sh -s -- -y ; fi'

- name: rustup update
  shell: "{{ ansible_env.HOME }}/.cargo/bin/rustup update"

- name: Ensure Repos Directory Exists
  file: path={{setupsoftware_dir}} state=directory

- name: Clone dotfiles
  git:
    repo: 'git://github.com/charlesdaniels/dotfiles.git'
    dest: '{{setupsoftware_dir}}/dotfiles'
    update: yes
    clone: yes
    recursive: yes
    version: next

- name: Clone charles-util
  git:
    repo: 'git://github.com/charlesdaniels/charles-util.git'
    dest: '{{setupsoftware_dir}}/charles-util'
    update: yes
    clone: yes
    recursive: yes

- name: Clone herc-tools-public
  git:
    repo: 'git://github.com/HeRCLab/herc-tools-public.git'
    dest: '{{setupsoftware_dir}}/herc-tools-public'
    update: yes
    clone: yes
    recursive: yes

- name: Clone Pcalc
  git:
    repo: 'git://github.com/vapier/pcalc.git'
    dest: '{{setupsoftware_dir}}/pcalc'
    update: yes
    clone: yes
    recursive: yes
    version: v4

- name: Install dotfiles
  shell: "sh {{setupsoftware_dir}}/dotfiles/install.sh"
  ignore_errors: yes

- name: Install charles-util
  command: make install
  args:
    chdir: '{{setupsoftware_dir}}/charles-util'

- name: Install herc-tools-public
  command: make install
  args:
    chdir: '{{setupsoftware_dir}}/herc-tools-public'

- name: Build Pcalc
  command: make
  args:
    chdir: '{{setupsoftware_dir}}/pcalc'
  become: yes
  become_user: root
  become_method: sudo

- name: Install Pcalc
  command: make install
  args:
    chdir: '{{setupsoftware_dir}}/pcalc'
  become: yes
  become_user: root
  become_method: sudo

- name: Fetch exa
  get_url:
      url: "https://github.com/ogham/exa/releases/download/v0.8.0/exa-linux-x86_64-0.8.0.zip"
      dest: "{{setupsoftware_dir}}/exa.zip"

- name: Extract exa
  unarchive:
      src: "{{setupsoftware_dir}}/exa.zip"
      dest: "{{setupsoftware_dir}}/"

- name: Install exa
  copy:
      src: "{{setupsoftware_dir}}/exa-linux-x86_64"
      dest: "/usr/local/bin/exa"
  become: yes
  become_user: root
  become_method: sudo

- name: Install ripgrep
  apt:
      deb: "https://github.com/BurntSushi/ripgrep/releases/download/0.9.0/ripgrep_0.9.0_amd64.deb"
  become: yes
  become_user: root
  become_method: sudo

- name: Install fd-find
  apt:
      deb: "https://github.com/sharkdp/fd/releases/download/v7.0.0/fd_7.0.0_amd64.deb"
  become: yes
  become_user: root
  become_method: sudo

- name: Fetch tin-summer
  get_url:
      url: "https://github.com/vmchale/tin-summer/releases/download/1.21.5/tin-summer-1.21.5-x86_64-unknown-linux-gnu.tar.gz"
      dest: "{{setupsoftware_dir}}/tin-summer.tar.gz"

- name: Extract tin-summer
  unarchive:
      src: "{{setupsoftware_dir}}/tin-summer.tar.gz"
      dest: "{{setupsoftware_dir}}/"

- name: Install tin-summer
  copy:
      src: "{{setupsoftware_dir}}/sn"
      dest: "/usr/local/bin/sn"
      mode: 751
  become: yes
  become_user: root
  become_method: sudo

- name: Install tokei
  apt:
      deb: "https://github.com/Aaronepower/tokei/releases/download/v6.0.0/tokei-v6.0.0-x86_64-unknown-linux-gnu.deb"
  become: yes
  become_user: root
  become_method: sudo

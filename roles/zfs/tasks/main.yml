---

- name: Get Uname
  shell: uname -r
  register: uname_r_cmd
  changed_when: false

- set_fact:
    uname_r={{ uname_r_cmd.stdout }}

- name: Install Linux Headers
  apt: pkg={{ item }} state=latest
  with_items:
      - linux-headers-{{ uname_r }}
  become_user: root
  become_method: sudo
  become: yes

# A nice man on StackOverflow said this was a good idea
- name: Link rm
  file:
      src: /bin/rm
      dest: /usr/bin/rm
      state: link
  become_user: root
  become_method: sudo
  become: yes

- name: Install ZFS
  apt: pkg={{ item }} state=latest
  with_items:
      - zfs-dkms
      - zfsutils-linux
  become_user: root
  become_method: sudo
  become: yes

- name: Load ZFS Kernel Module
  modprobe:
      name: zfs
      state: present
  become_user: root
  become_method: sudo
  become: yes
  notify: restart zfs

- name: Clone Sanoid
  git:
    repo: 'git://github.com/jimsalterjrs/sanoid.git'
    dest: '{{setupsoftware_dir}}/sanoid'
    update: yes
    clone: yes
    recursive: yes
    version: v1.4.18

- name: Install Sanoid Dependencies
  apt: pkg={{ item }} state=latest
  with_items:
      - pv
      - lzop
      - mbuffer
      - libconfig-inifiles-perl
  become_user: root
  become_method: sudo
  become: yes

- name: Install Sanoid
  become_user: root
  become_method: sudo
  become: yes
  copy:
      src: "{{setupsoftware_dir}}/sanoid/{{ item }}"
      dest: "/usr/local/bin/{{ item }}"
      mode: 0755
  with_items:
      - sanoid
      - syncoid
      - findoid

- name: Create Sanoid Configuration Folder
  file: path=/etc/sanoid state=directory
  become_user: root
  become_method: sudo
  become: yes

- name: Install Sanoid Default Configuration
  copy:
      src: "{{setupsoftware_dir}}/sanoid/sanoid.defaults.conf"
      dest: "/etc/sanoid/sanoid.defaults.conf"
      mode: 0644
  become_user: root
  become_method: sudo
  become: yes

- name: Install Sanoid Services
  copy:
      src: "{{setupsoftware_dir}}/sanoid/debian/{{ item }}"
      dest: "/etc/systemd/system/{{ item }}"
      mode: 755
  with_items:
      - sanoid.service
      - sanoid.timer
  become_user: root
  become_method: sudo
  become: yes

- name: Apply mount-on-boot Workaround
  template:
      src: zfs-mount.service.j2
      dest: /lib/systemd/system/zfs-mount.service
  become_user: root
  become_method: sudo
  become: yes
